version: '3.3'

# mkdir certs && cd certs
# openssl req -nodes -newkey rsa:4096 -keyout registry-auth.key -out registry-auth.csr -subj "/CN=registry.example.com"
# openssl x509 -in registry-auth.csr -out registry-auth.crt -req -signkey registry-auth.key -days 3650
# cd ..
# docker-compose up -d

# mkdir -p /opt/gitlab/{gitlab,redis,postgresql,logs,certs}


# TODO: add documentation on how to do this
# TODO: make code reuseable

services:
  redis:
    # restart: always
    image: sameersbn/redis:latest
    command:
    - --loglevel warning
    volumes:
    - /opt/gitlab/redis:/var/lib/redis
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == ci

  postgresql:
    # restart: always
    image: sameersbn/postgresql:9.6-2
    volumes:
    - /opt/gitlab/postgresql:/var/lib/postgresql
    environment:
    - DB_USER=gitlab
    - DB_PASS=password
    - DB_NAME=gitlabhq_production
    - DB_EXTENSION=pg_trgm
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == ci

  gitlab:
    # restart: always
    image: sameersbn/gitlab:9.5.5
    depends_on:
    - redis
    - postgresql
    # external_links:
    # - "registry:registry.gitlab.example.com"
    extra_hosts:
    - "gitlab.example.com:192.168.100.208"
    - "registry.gitlab.example.com:192.168.100.208"
    ports:
    - "10080:80"
    - "10022:22"
    volumes:
    - /opt/gitlab/gitlab:/home/git/data
    - /opt/gitlab/logs:/var/log/gitlab
    - /opt/gitlab/certs:/certs
    environment:
    - DEBUG=false
    - DB_ADAPTER=postgresql
    - DB_HOST=postgresql
    - DB_PORT=5432
    - DB_USER=gitlab
    - DB_PASS=password
    - DB_NAME=gitlabhq_production
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - GITLAB_SSH_PORT=10022
    - GITLAB_PORT=10080
    - GITLAB_HOST=gitlab.example.com
    - GITLAB_SECRETS_DB_KEY_BASE=superrandomsecret
    - GITLAB_SECRETS_SECRET_KEY_BASE=superrandomsecret
    - GITLAB_SECRETS_OTP_KEY_BASE=superrandomsecret
    - GITLAB_REGISTRY_ENABLED=true
    - GITLAB_REGISTRY_HOST=registry.gitlab.example.com
    - GITLAB_REGISTRY_PORT=5000
    - GITLAB_REGISTRY_API_URL=http://registry:5000
    - GITLAB_REGISTRY_CERT_PATH=/certs/registry-auth.crt
    - GITLAB_REGISTRY_KEY_PATH=/certs/registry-auth.key
    - SSL_REGISTRY_KEY_PATH=/certs/registry.key
    - SSL_REGISTRY_CERT_PATH=/certs/registry.crt
    deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.labels.role == ci

  registry:
    # restart: always
    image: registry:2.4.1
    # external_links:
    # - "gitlab:gitlab.example.com"
    extra_hosts:
    - "gitlab.example.com:192.168.100.208"
    - "registry.gitlab.example.com:192.168.100.208"
    ports:
    - "5000:5000"
    volumes:
    - /opt/gitlab/gitlab/shared/registry:/registry
    - /opt/gitlab/certs:/certs
    environment:
    - REGISTRY_LOG_LEVEL=info
    - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry
    - REGISTRY_AUTH_TOKEN_REALM=http://gitlab.example.com:10080/jwt/auth
    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry
    - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer
    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry-auth.crt
    - REGISTRY_STORAGE_DELETE_ENABLED=true
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == ci


# volumes:
#   gitlab-data:
#   gitlab-logs:
#   postgresql:
#   redis:
#   registry-data:
